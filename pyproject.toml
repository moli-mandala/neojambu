[project]
name = "neojambu"
version = "1.0.0"
description = "A linguistics webapp for exploring etymological data with 313k lemmas across 615 languages"
authors = [
    {name = "Aryaman Arora", email = "aryaman.arora2020@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "flask==2.2.3",
    "gunicorn==20.1.0",
    "jinja2==3.1.2",
    "markdown==3.4.1",
    "pybtex==0.24.0",
    "pytest>=8.4.1",
    "sqlalchemy==1.4.41",
    "tqdm==4.64.0",
    "werkzeug<3.0.0",
]

[dependency-groups]
dev = [
    "bandit>=1.8.6",
    "black>=25.1.0",
    "isort>=6.0.1",
    "mypy>=1.16.1",
    "ruff>=0.12.2",
    "safety>=3.5.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
only-include = [
    "*.py",
    "templates",
    "static",
    "Procfile",
    "runtime.txt",
    "app.json",
    ".buildpacks", 
    "release.sh",
]

[tool.ruff]
target-version = "py310"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"test_*.py" = ["B011"]

[tool.black]
target-version = ['py310']
line-length = 88
skip-string-normalization = true

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["app", "models", "search"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# SQLAlchemy generates complex types
[[tool.mypy.overrides]]
module = "sqlalchemy.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "pybtex.*"
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", ".venv"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_process_communication

[tool.pytest.ini_options]
testpaths = ["."]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
